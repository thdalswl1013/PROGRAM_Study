"""
한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 
각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고, 
각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 

단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 
회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

-> 회의가 빨리 "끝나는" 순으로 정렬
   : 시작시간 기준으로 정렬 후, 끝나는시간 기준으로 한 번 더 정렬

"""

n=int(input()) # 회의 개수
time=[]

for i in range(n):
    start, end = map(int, input().split())
    time.append([start, end])

time = sorted(time) # 시작 시간 기준  : [[0, 6], [1, 4], [2, 13], [3, 5], [3, 8], [5, 7], [5, 9], [6, 10], [8, 11], [8, 12], [12, 14]]
time = sorted(time, key=lambda x: x[1]) # 끝나는 시간 기준: [[1, 4], [3, 5], [0, 6], [5, 7], [3, 8], [5, 9], [6, 10], [8, 11], [8, 12], [2, 13], [12, 14]] 

last = 0 # 마지막 회의 시간
count = 0 # 회의 개수

for i, j in time:
  if i >= last: # 회의 시작 시간 >= 마지막 회의 시간 
    count += 1
    last = j

print(count)
